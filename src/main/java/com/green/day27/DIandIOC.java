package com.green.day27;

public class DIandIOC {
    /* 스프링:
    DI(의존성 주입) 의존성은 주소값, 객체가 다른 객체를 이용하기 위해선 주소값을 알아야하는데 그 주소값이 외부에서 들어오는 것 (사용쪽)
    IOC(제어의 역전) (설계 쪽) 담을 수 있는 멤버필드만 있고 객체 생성 X 주소값을 주입받음 대입연산자+
            그냥 주입도 있다.(프라이빗에 세터 없이 입력가능) -이 행위를 DI라고 함
            에러를 방지하기 위해 스프링 팀에서도 생성자 주입을 추천
    이득인 이유: 코드 수정 없이 얘가 주는 걸 받을 수 있기 때문

    의존성 객체 주입: 스스로가 만드는 것이 아니라 제어권을 스프링에게 위임하여 스프링이 만들어놓은 객체를 주입
           ㄴ 스프링에게 위임: 빈-bean-등록 내가 사용하는 클래스를 객체화 하는 게 아니라 빈등록을 표시만 하면 스프링이 객체화
                스프링은 주소값을 가지고 있는다 제어의 흐름을 스프링에게 맡김


     */
}
